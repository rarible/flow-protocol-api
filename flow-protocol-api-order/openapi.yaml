openapi: 3.0.3
info:
  title: flow-protocol-api-order
  version: v0.1

paths:
  "/v0.1/orders/{orderId}":
    get:
      tags:
        - flow-order-controller
      operationId: getOrderByOrderId
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FlowOrder"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FlowApiError"

  "/v0.1/orders/all/byStatus":
    get:
      tags:
        - flow-order-controller
      operationId: getOrdersAllByStatus
      parameters:
        - name: sort
          in: query
          required: false
          schema:
            type: string
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: status
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/FlowOrderStatus"
      responses:
        '200':
          $ref: "#/components/responses/FlowOrdersPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/orders/all":
    get:
      deprecated: true
      tags:
        - flow-order-controller
      description: Returns all orders by specified parameters
      operationId: getOrdersAll
      parameters:
        - name: origin
          description: "Address of the consumer to receive the commission for order"
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: continuation
          description: "Continuation token to paginate items search result"
          in: query
          required: false
          schema:
            type: string
        - name: size
          description: "The number of orders to return"
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/FlowOrdersPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/orders/byIds":
    post:
      tags:
        - flow-order-controller
      description: Returns all orders by order hash
      operationId: getOrdersByIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FlowOrderIds"
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FlowOrder"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/orders/sell/byMaker":
    get:
      tags:
        - flow-order-controller
      operationId: getSellOrdersByMaker
      parameters:
        - name: maker
          in: query
          required: true
          schema:
            type: array
            minItems: 1
            items:
              $ref: "#/components/schemas/FlowAddress"
        - name: origin
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/FlowOrdersPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/orders/sell/byItem":
    get:
      tags:
        - flow-order-controller
      operationId: getSellOrdersByItem
      parameters:
        - name: contract
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: tokenId
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/BigInteger"
        - name: maker
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: origin
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/FlowOrdersPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/orders/sell/byCollection":
    get:
      tags:
        - flow-order-controller
      operationId: getSellOrdersByCollection
      parameters:
        - name: collection
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: origin
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/FlowOrdersPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/orders/sell/byItemAndByStatus":
    get:
      tags:
        - flow-order-controller
      operationId: getSellOrdersByItemAndByStatus
      parameters:
        - name: contract
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: tokenId
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/BigInteger"
        - name: maker
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: origin
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: status
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/FlowOrderStatus"
        - name: currencyAddress
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: "#/components/responses/FlowOrdersPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/orders/sync":
    get:
      tags:
        - flow-order-controller
      operationId: getOrdersSync
      parameters:
        - name: type
          in: query
          schema:
            $ref: "#/components/schemas/FlowOrderSyncType"
        - name: continuation
          description: "Continuation token to paginate items search result"
          in: query
          required: false
          schema:
            type: string
        - name: size
          description: "The number of orders to return"
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum:
              - UPDATED_AT_DESC
              - UPDATED_AT_ASC
            default: 'UPDATED_AT_DESC'
      responses:
        '200':
          $ref: "#/components/responses/FlowOrdersPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"


  "/v0.1/orders/sell":
    get:
      tags:
        - flow-order-controller
      operationId: getSellOrders
      parameters:
        - name: origin
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/FlowOrdersPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/orders/sell/currencies/{itemId}":
    get:
      tags:
        - flow-order-controller
      operationId: getSellCurrencies
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FlowAsset"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"


  ###################### Bids ######################

  "/v0.1/orders/bids/byMaker":
    get:
      tags:
        - flow-bid-order-controller
      operationId: getOrderBidsByMaker
      parameters:
        - name: maker
          in: query
          required: true
          schema:
            type: array
            minItems: 1
            items:
              $ref: "#/components/schemas/FlowAddress"
        - name: origin
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: status
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/FlowOrderStatus"
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/FlowOrdersPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/bids/byItem":
    get:
      tags:
        - flow-bid-order-controller
      operationId: getBidsByItem
      parameters:
        - name: contract
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: tokenId
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/BigInteger"
        - name: status
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: "#/components/schemas/FlowOrderStatus"
        - name: maker
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/FlowAddress"
        - name: origin
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: currencyAddress
          in: query
          required: false
          schema:
            type: string
        - name: continuation
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
      responses:
        '200':
          $ref: "#/components/responses/FlowOrdersPage"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/bids/currencies/{itemId}":
    get:
      tags:
        - flow-bid-order-controller
      operationId: getBidCurrencies
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FlowAsset"
        '400':
          $ref: "#/components/responses/BadRequest"
        '500':
          $ref: "#/components/responses/ServerError"

  "/v0.1/auctions/{id}":
    get:
      tags:
        - "flow-auction-controller"
      operationId: "getAuctionById"
      description: "Return auction by id"
      parameters:
        - name: "id"
          description: "Auction ID"
          in: "path"
          required: true
          schema:
            type: integer
            format: int64
          example: "24338552"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowAuction"
        "404":
          $ref: "#/components/responses/EntityNotFound"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/ServerError"

  "/v0.1/auctions/byIds":
    post:
      tags:
        - "flow-auction-controller"
      operationId: "getAuctionsByIds"
      description: "Returns all auctions by auction id's"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FlowAuctionIds"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FlowAuction"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/ServerError"

  "/v0.1/auctions/{id}/bids":
    get:
      tags:
        - "flow-auction-controller"
      operationId: "getAuctionBidsById"
      description: "Returns auction bids by the auction id"
      parameters:
        - name: "id"
          description: "Auction ID"
          in: "path"
          required: true
          schema:
            type: integer
            format: int64
          example: "24338552"
        - name: "continuation"
          description: "Continuation token from the previous response"
          in: "query"
          schema:
            type: string
        - name: "size"
          description: "The number of auction bids to return"
          in: "query"
          schema:
            type: integer
            format: int32
      responses:
        "200":
          $ref: "#/components/responses/FlowAuctionBidsPage"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/ServerError"
  "/v0.1/auctions/bySeller":
    get:
      tags:
        - "flow-auction-controller"
      operationId: "getAuctionsBySeller"
      description: "Returns all auctions by seller"
      parameters:
        - name: "seller"
          in: "query"
          required: true
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: "status"
          in: "query"
          schema:
            type: array
            items:
              $ref: "#/components/schemas/FlowAuctionStatus"
        - name: "continuation"
          in: "query"
          schema:
            type: string
        - name: "size"
          in: "query"
          schema:
            type: integer
            format: int32
      responses:
        "200":
          $ref: "#/components/responses/FlowAuctionsPage"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/ServerError"

  "/v0.1/auctions/byItem":
    get:
      tags:
        - "flow-auction-controller"
      operationId: "getAuctionsByItem"
      description: "Returns all auctions by item"
      parameters:
        - name: contract
          in: "query"
          required: true
          schema:
            type: string
        - name: tokenId
          in: "query"
          required: true
          schema:
            type: integer
            format: int64
        - name: seller
          in: "query"
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: sort
          in: "query"
          schema:
            $ref: "#/components/schemas/FlowAuctionSort"
        - name: status
          in: "query"
          schema:
            type: array
            items:
              $ref: "#/components/schemas/FlowAuctionStatus"
        - name: currencyId
          in: "query"
          schema:
            type: string
            example: "A.7e60df042a9c0868.FlowToken"
        - name: continuation
          in: "query"
          schema:
            type: string
        - name: "size"
          in: "query"
          schema:
            type: integer
            format: int32
      responses:
        "200":
          $ref: "#/components/responses/FlowAuctionsPage"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/ServerError"
  "/v0.1/auctions/byCollection":
    get:
      tags:
        - "flow-auction-controller"
      operationId: "getAuctionsByCollection"
      description: "Returns all auctions by collection"
      parameters:
        - name: "contract"
          in: "query"
          required: true
          schema:
            type: string
        - name: "seller"
          in: "query"
          schema:
            $ref: "#/components/schemas/FlowAddress"
        - name: "status"
          in: "query"
          schema:
            type: array
            items:
              $ref: "#/components/schemas/FlowAuctionStatus"
        - name: "continuation"
          in: "query"
          schema:
            type: string
        - name: "size"
          in: "query"
          schema:
            type: integer
            format: int32
      responses:
        "200":
          $ref: "#/components/responses/FlowAuctionsPage"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/ServerError"

components:
  responses:
    FlowOrdersPage:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/FlowOrdersPagination"
    FlowAuctionBidsPage:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/FlowAuctionBidsPagination"
    FlowAuctionsPage:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/FlowAuctionsPagination"