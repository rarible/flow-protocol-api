openapi: 3.0.3
info:
  title: flow-protocol-model-nft
  version: v0.1

paths: {}
components:
  schemas:

    MetaAttribute:
      type: "object"
      properties:
        key:
          type: "string"
        value:
          type: "string"
      required:
        - "key"
        - "value"

    MetaContent:
      type: "object"
      properties:
        typeContent:
          type: "string"
        url:
          type: "string"
        attributes:
          type: "array"
          items:
            $ref: "#/components/schemas/MetaAttribute"
      required:
        - "typeContent"
        - "url"

    Meta:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        attributes:
          type: "array"
          items:
            $ref: "#/components/schemas/MetaAttribute"
        contents:
          type: "array"
          items:
            $ref: "#/components/schemas/MetaContent"
        raw:
          $ref: "#/components/schemas/Binary"
      required:
        - "name"

    FlowCreator:
      type: "object"
      properties:
        account:
          $ref: "#/components/schemas/FlowAddress"
        value:
          $ref: "#/components/schemas/BigDecimal"
      required:
        - "account"
        - "value"

    FlowRoyalty:
      type: "object"
      properties:
        account:
          $ref: "#/components/schemas/FlowAddress"
        value:
          $ref: "#/components/schemas/BigDecimal"
      required:
        - "account"
        - "value"

    FlowNftItem:
      type: object
      required:
        - "id"
        - "tokenId"
        - "collection"
        - "creators"
        - "owners"
        - "royalties"
        - "mintedAt"
        - "lastUpdatedAt"
        - "supply"
        - "deleted"
      properties:
        id:
          type: string
          example: "FLOW:${FlowAddress}:${tokenId}"
        collection:
          $ref: "#/components/schemas/FlowContract"
        tokenId:
          $ref: "#/components/schemas/BigInteger"
        creators:
          type: array
          items:
            $ref: "#/components/schemas/FlowCreator"
        owners:
          type: array
          items:
            $ref: "#/components/schemas/FlowAddress"
        royalties:
          type: "array"
          items:
            $ref: "#/components/schemas/FlowRoyalty"
        metaUrl:
          type: string
        meta:
          $ref: "#/components/schemas/Meta"
        mintedAt:
          type: "string"
          format: "date-time"
        lastUpdatedAt:
          type: "string"
          format: "date-time"
        supply:
          $ref: "#/components/schemas/BigInteger"
        deleted:
          type: "boolean"

    FlowNftItemEvent:
      required:
        - eventId
        - itemId
      properties:
        eventId:
          type: string
        itemId:
          type: string
      discriminator:
        propertyName: type
        mapping:
          UPDATE: "#/components/schemas/FlowNftItemUpdateEvent"
          DELETE: "#/components/schemas/FlowNftItemDeleteEvent"
      oneOf:
        - $ref: "#/components/schemas/FlowNftItemUpdateEvent"
        - $ref: "#/components/schemas/FlowNftItemDeleteEvent"

    FlowNftItemUpdateEvent:
      type: object
      required:
        - item
      properties:
        type:
          type: string
          enum:
            - UPDATE
        item:
          $ref: "#/components/schemas/FlowNftItem"
    FlowNftItemDeleteEvent:
      type: object
      required:
        - item
      properties:
        type:
          type: string
          enum:
            - DELETE
        item:
          $ref: "#/components/schemas/FlowNftDeletedItem"

    FlowNftDeletedItem:
      required:
        - id
        - token
        - tokenId
      type: object
      properties:
        id:
          type: string
          description: Item identifier, has format "contract:tokenId"
        token:
          type: string
        tokenId:
          type: integer

#
# Для чего нижние две схемы? `FlowItemMetaForm` и `FlowItemMeta`
# В чем их отличие?
#
    FlowItemMetaForm:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        uri:
          type: string

    FlowItemMeta:
      type: object
      properties:
        itemId:
          type: string
        title:
          type: string
        description:
          type: string
        uri:
          type: string

    FlowNftItems:
      required:
        - total
        - items
      type: object
      properties:
        total:
          type: integer
          format: int32
        continuation:
          type: string
          description: Continuation token to paginate items search result
        items:
          type: array
          description: List of found items
          items:
            "$ref": "#/components/schemas/FlowNftItem"

    FlowOwnershipEvent:
      required:
        - eventId
        - ownershipId
      properties:
        eventId:
          type: string
        ownershipId:
          type: string
      discriminator:
        propertyName: type
        mapping:
          UPDATE: "#/components/schemas/FlowNftOwnershipUpdateEvent"
          DELETE: "#/components/schemas/FlowNftOwnershipDeleteEvent"
      oneOf:
        - $ref: "#/components/schemas/FlowNftOwnershipUpdateEvent"
        - $ref: "#/components/schemas/FlowNftOwnershipDeleteEvent"


    FlowNftOwnershipUpdateEvent:
      type: object
      required:
        - ownership
      properties:
        type:
          type: string
          enum:
            - UPDATE
        ownership:
          $ref: "#/components/schemas/FlowNftOwnership"

    FlowNftOwnershipDeleteEvent:
      type: object
      required:
        - ownership
      properties:
        type:
          type: string
          enum:
            - DELETE
        ownership:
          $ref: "#/components/schemas/FlowNftOwnership"

    FlowNftOwnership:
      required:
        - id
        - contract
        - tokenId
        - owners
        - creators
        - createdAt
      type: object
      properties:
        id:
          type: string
          description: Ownership identifier, has format "token:tokenId:owner"
        contract:
          $ref: "#/components/schemas/FlowContract"
        tokenId:
          type: string
          description: Token ID
        owners:
          type: array
          items:
            $ref: "#/components/schemas/FlowAddress"
          description: Owner's account address
        creators:
          type: array
          items:
            $ref: "#/components/schemas/PayInfo"
        createdAt:
          type: string
          format: date-time

    FlowNftCollection:
      type: object
      required:
        - id
        - owner
        - name
        - symbol
      properties:
        id:
          $ref: "#/components/schemas/FlowContract"
        owner:
          $ref: "#/components/schemas/FlowAddress"
        name:
          type: string
          description: Colelction name
        symbol:
          type: string
          description: Collection short name

    FlowNftOwnerships:
      type: object
      required:
        - total
        - ownerships
      properties:
        total:
          type: integer
          format: int32
        continuation:
          type: string
        ownerships:
          type: array
          items:
            $ref: "#/components/schemas/FlowNftOwnership"

    FlowNftCollections:
      type: object
      required:
        - total
        - data
      properties:
        total:
          type: integer
          format: int32
        continuation:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/FlowNftCollection"

